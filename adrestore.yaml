openapi: 3.0.3
info:
  title: AdreStore API
  description: A simple CRUD API for an example Address Store
  contact:
    name: Szabolcs Bazil Papp
    email: papp.szabolcs.bazil@gmail.com
  version: 1.0.0

tags:
  - name: Person

paths:
  /persons:
    get:
      summary: Retrieve all persons
      operationId: getAllPersons
      tags:
        - Person
      responses:
        '200':
          description: A list of persons
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PersonPreview'
    post:
      summary: Create a new person
      operationId: createPerson
      tags:
        - Person
      requestBody:
        description: Person object to be created
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonDetail'
      responses:
        '201':
          description: The created person
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetail'
  /persons/{personId}:
    get:
      summary: Retrieve a person by ID
      operationId: getPersonById
      tags:
        - Person
      parameters:
        - name: personId
          in: path
          description: ID of person to return
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: The requested person
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetail'
    put:
      summary: Update a person's name
      operationId: updatePersonName
      tags:
        - Person
      parameters:
        - in: path
          name: personId
          required: true
          description: ID of the person to update
          schema:
            type: integer
            format: int32
      requestBody:
        description: Updated name of the person
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonNameUpdate'
      responses:
        '200':
          description: Person name updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetail'
    delete:
      summary: Delete a person by ID
      operationId: deletePerson
      tags:
        - Person
      parameters:
        - name: personId
          in: path
          description: ID of person to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: The person was successfully deleted
  /persons/{personId}/addresses:
    put:
      summary: Update a person's addresses
      operationId: updatePersonAddress
      tags:
        - Person
      parameters:
        - in: path
          name: personId
          required: true
          description: ID of the person to update
          schema:
            type: integer
            format: int32
      requestBody:
        description: Updated addresses of the person
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonAddressUpdate'
      responses:
        '200':
          description: Person addresses updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonDetail'

components:
  schemas:
    PersonPreview:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string

    PersonDetail:
      type: object
      properties:
        id:
          type: integer
          format: int32
        firstName:
          type: string
        lastName:
          type: string
        permanentAddress:
          $ref: '#/components/schemas/AddressDetail'
        temporaryAddress:
          $ref: '#/components/schemas/AddressDetail'

    AddressDetail:
      type: object
      properties:
        id:
          type: integer
          format: int32
        country:
          type: string
        town:
          type: string
        street:
          type: string
        streetNo:
          type: integer
          format: int32

    PersonNameUpdate:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
      required:
        - firstName
        - lastName

    PersonAddressUpdate:
      type: object
      properties:
        permanentAddress:
          $ref: '#/components/schemas/AddressDetail'
        temporaryAddress:
          $ref: '#/components/schemas/AddressDetail'
      required:
        - permanentAddress
        - temporaryAddress